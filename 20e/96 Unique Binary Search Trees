#solution: DP
# How to get the solution:
# the relationship between numTrees(n) and numTrees(m)'s, m<n
# The relationship can look like this numTrees(n) = f(numTrees(m1),numTrees(m2),...)
# time complexity: O(n^2), 40 ms, 67.49% 
# space complexity: O(n), 13.7 MB, 24.14%
class Solution:
    def numTrees(self, n):
        """
        :type n: int
        :rtype: int
        """
        G = [0]*(n+1)
        G[0], G[1] = 1, 1

        for i in range(2, n+1):
            for j in range(1, i+1):
                G[i] += G[j-1] * G[i-j]

        return G[n]

#reference: https://leetcode-cn.com/problems/unique-binary-search-trees/solution/bu-tong-de-er-cha-sou-suo-shu-by-leetcode-solution/
