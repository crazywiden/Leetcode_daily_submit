#solution: DP
#time complexity: O(mn), 60 ms, 66.94%
#space complexity: O(mn), 15.4 MB, 8.33%
class Solution:
    def minPathSum(self, grid: List[List[int]]) -> int:
        m = len(grid)
        n = len(grid[0])
        Dist = [[0]*n for i in range(m)]
        Dist[0][0] = 0

        for i in range(1,m):
            Dist[i][0] = Dist[i-1][0] + grid[i-1][0]

        for i in range(1,n):
            Dist[0][i] = Dist[0][i-1] + grid[0][i-1]

        for x in range(1,m):
            for y in range(1,n):
                Dist[x][y] = min([Dist[x-1][y]+grid[x-1][y], Dist[x][y-1]+grid[x][y-1]])

        return Dist[m-1][n-1]+grid[m-1][n-1]