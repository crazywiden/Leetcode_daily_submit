#sort
#time complexity: O(n^2logn), 224 ms, 66.62%
#space complexity: O(n^2), 19.7 MB, 56.42%
class Solution:
    def kthSmallest(self, matrix: List[List[int]], k: int) -> int:
        vals = []
        n = len(matrix)
        for i in range(min(k,n)):
            for j in range(min(k,n)):
                vals.append(matrix[i][j])
        vals = sorted(vals)
        return vals[k-1]

#[[1,5,9],[10,11,13],[12,13,15]]
#8
#2
# [[1,5,5],[10,11,13],[12,13,15]]
# 2
# [[5,5,5],[10,10,10],[10,10,15]]
# 5
# [[1]]
# 1
# [[1,2],[1,3]]
# 2

#solution: sorted-union
#time complexity: O(klogn), 304 ms, 18.33%, every push and pop = log(n)
#space complexity: O(n), 19.8 MB, 20.40%
class Solution:
    def kthSmallest(self, matrix: List[List[int]], k: int) -> int:
        n = len(matrix)
        pd = [(matrix[i][0],i,0) for i in range(n)]
        heapq.heapify(pd)

        for i in range(k-1):
            val, x, y = heapq.heappop(pd)
            if y+1<n:
                heapq.heappush(pd, (matrix[x][y+1],x,y+1))
        
        return heapq.heappop(pd)[0]

#solution: binary search
#time complexity: O(nlog(max-min)), 200 ms, 96.26%, every check = O(n)
#space complexity: O(1), 19.8 MB, 13.60% 
class Solution:
    def kthSmallest(self, matrix: List[List[int]], k: int) -> int:
        n = len(matrix)

        def check(mid):
            i, j = n - 1, 0
            num = 0
            while i >= 0 and j < n:
                if matrix[i][j] <= mid:
                    num += i + 1
                    # adding i + 1 because it's looking at the matrix in the terms of columns
                    j += 1
                else:
                    i -= 1
            return num >= k

        left, right = matrix[0][0], matrix[-1][-1]
        while left < right:
            mid = (left + right) // 2
            if check(mid):
                right = mid
            else:
                left = mid + 1
        
        return left
#reference:https://leetcode-cn.com/problems/kth-smallest-element-in-a-sorted-matrix/solution/you-xu-ju-zhen-zhong-di-kxiao-de-yuan-su-by-leetco/

