# [322] Coin Change
#

# time complexity: O(mn)
# space complexity: O(n)
# @lc code=start
class Solution:
    def coinChange(self, coins: List[int], amount: int) -> int:
        if amount == 0:
            return 0
        dp = [0]*(amount + 1)
        dp[amount] = amount + 1

        for i in range(1,amount+1):
            tmp = [dp[i-c]+1 for c in coins if i>=c]
            if len(tmp) == 0:
                dp[i] = amount + 1
            else:
                dp[i] = min(tmp)
        
        if dp[amount] > amount :
            return -1
        return dp[amount]
            
        
# @lc code=end

#[2]\n 3
#[1]\n 0
#[1]\n 1
#[1]\n 2
#[6,2,893,4,1,2111,45,109,1000000,100,3567]\n 21
