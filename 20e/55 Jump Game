#solution: rightmost
#time complexity: O(n), 52 ms, 70.90%
#space complexity: O(1), 15.1 MB, 6.90%
class Solution:
    def canJump(self, nums: List[int]) -> bool:
        n = len(nums)
        rightmost = 0
        for i in range(n):
            if i<=rightmost:
                rightmost = max(rightmost, i+nums[i])
                if rightmost>=n-1:return True
        return False
