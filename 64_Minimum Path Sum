# [64] Minimum Path Sum
#

# @lc code=start
class Solution:
    def minPathSum(self, grid: List[List[int]]) -> int:
        m = len(grid)
        n = len(grid[0])
        dp = [[-1]*n for i in range(m)]
        for i in range(m):
            for j in range(n):
                if i-1>=0 and j-1>=0:
                    dp[i][j] = min(dp[i-1][j], dp[i][j-1])+grid[i][j]
                elif i-1>=0:
                    dp[i][j] = dp[i-1][j]+grid[i][j]
                elif j-1>=0:
                    dp[i][j] = dp[i][j-1]+grid[i][j]
                else:
                    dp[i][j] = grid[i][j]
        return dp[m-1][n-1]
# @lc code=end

# [[3,2,3],[1,5,1],[4,1,6],[1,5,6],[1,0,3],[1,3,1],[4,2,1]]
# [[3,1,4]]
